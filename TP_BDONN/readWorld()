public World readWorld(Integer idJoueur, String nomPartie, String nomSauvegarde) throws SQLException, ClassNotFoundException {
        
        // Attributs:
        
        
        
            try{
                    /**Connection connection = DriverManager.getConnection(”jdbc :postgresql ://localhost/test”, ”prweb”, ”prweb”);*/
                // Retreive partie infos for the player
                    String query = "SELECT * FROM Partie Join Joueur ON Joueur.id_Joueur=Partie.id_partie WHERE nomPartie=? and id_joueur=?";
                    PreparedStatement stmt = this.connection.prepareStatement(query);
                    stmt.setString(2, nomPartie);
                    stmt.setInt(1, idJoueur);
                    ResultSet res1 = stmt.executeQuery();
                    World monde = null;
                    while(res1.next()){
                        /**on recupere la hauteur et la longueur du monde en 1 fois ici*/
                        int local_height = res1.getInt("hauteur");
                        int local_width = res1.getInt("largeur");
                        /**on crée un nouveau monde*/
                        monde = new World(local_width, local_height);
                        /** la methode world crée 
                        *this.listElements = new LinkedList<ElementDeJeu>();
                        *this.player = new Joueur("Player");
                        * il faut initialiser login et password
                        *this.positions = new ArrayList<Point2D>();
                        */
                        monde.getPlayer().setLogin(res1.getString("login"));
                        monde.getPlayer().setPassword(res1.getString("password"));
                        
                    
            /**
                    this.listElements = new LinkedList<ElementDeJeu>();
                    this.positions = new ArrayList<Point2D>();
                    les listes sont crées et ensuite remplie par la methode generate
                    d'abord race, metier et joueur et ajouter à liste Elements*/
                    /*initailisation des attributs de joueur rajout de getter et setter dans la classe joueur*/
                        monde.getPlayer().getPersonnage().setMetier(res1.getString("metier"));
                        monde.getPlayer().getPersonnage().setRace(res1.getString("race"));
                    }
                    
                    /** les listes listElements et positions sont initialisées*/
                    stmt.close();
                    
                // Retreive sauvegarde infos for the partie
                    String query2 = "SELECT * FROM Partie Join Sauvegarde ON nomSauvegarde.id_Joueur=Partie.id_partie WHERE nomPartie=? and nomSauvegarde=?";
                    PreparedStatement stmt2 = this.connection.prepareStatement(query2);
                    stmt2.setString(1, nomPartie);
                    stmt2.setString(2, nomSauvegarde);
                    ResultSet res2 = stmt2.executeQuery();
         
                    while(res2.next()){
                        /**attributs de sauvegarde pour le monde world  ??*/
                        int id_partie = res2.getInt("id_partie");
                        int id_sauv = res2.getInt("id_sauv");
                    }
                     stmt2.close(); 
                     // Retreive world infos
                     /*recuperer les personnage creaturehumaine monstre dans des listes*/ 
                     
                     /* générer Creature humaine, Monstre et objet les rajouter à positions et à listElements*/
                    String recupmonstre = "SELECT * FROM Monstre Join Sauvegarde ON nomSauvegarde.id_sauvegarde=Monstre.id_sauvegarde WHERE nomSauvegarde=?";
                    PreparedStatement stmt3 = this.connection.prepareStatement(recupmonstre);
                    stmt3.setString(1, nomSauvegarde);
                    ResultSet res3 = stmt3.executeQuery();
                    while(res3.next()){
                        /**récupérer les différents attributs de monstres*/
                        Monstre monstre = new Monstre(monde);
                        monstre.setRace(res3.getString("race"));
                        
                        monstre.setPourcentAttaque(res3.getFloat("pageatt"));
                        monstre.setDegatsAttaque(res3.getFloat("degatt"));
                        monstre.setPourcentEsquive(res3.getFloat("pageesq"));
                        monstre.setPVieMax(res3.getFloat("ptvie_max"));
                        monstre.setPVie(res3.getFloat("ptvie"));
                        Point2D pos = new Point2D(res3.getInt("x"),res3.getInt("y"));
                        monstre.setPosition(pos);
                        
                        
                        /*rajout d'un monstre*/
                        monde.getListElements().add(monstre);
                        monde.getRoundElements().add(monstre);
                        monde.getPositions().add(monstre.getPosition());
                    }
                     stmt3.close(); 
                     
                    String query4 = "SELECT * FROM creaturehumaine Join Sauvegarde ON nomSauvegarde.id_sauvegarde=creaturehumaine.id_sauvegarde WHERE nomSauvegarde=?";
                    PreparedStatement stmt4 = this.connection.prepareStatement(query4);
                    stmt4.setString(1, nomSauvegarde);
                    ResultSet res4 = stmt4.executeQuery();
                    while(res4.next()){
                        /**récupérer les différents creaturehumaine*/
                        Personnage perso = new Personnage(monde);

                        
                        perso.setRace(res4.getString("race"));
                        perso.setMetier(res4.getString("metier"));
                        perso.setPourcentParade(res4.getInt("pagepar"));
                        perso.setValeurParade(res4.getInt("pageesq"));
                        perso.setPMagieMax(res4.getInt("ptmag_max"));
                        perso.setPMagie(res4.getInt("ptmag_act"));
                        perso.setPortee(res4.getInt("portee"));
                        Point2D pos = new Point2D(res4.getInt("x"),res4.getInt("y"));
                        perso.setPosition(pos);
                        
                        /*rajout de la personnage*/
                        monde.getListElements().add(perso);
                        monde.getRoundElements().add(perso);
                        monde.getPositions().add(pos);
                        
                    }
                     stmt4.close(); 
                    // Generate object world according to the infos
                    // Generate approprite objects
                    String query5 = "SELECT * FROM Objet Join Sauvegarde ON nomSauvegarde.id_sauvegarde=Objet.id_sauvegarde WHERE nomSauvegarde=?";
                    PreparedStatement stmt5 = this.connection.prepareStatement(query5);
                    stmt5.setString(1, nomSauvegarde);
                    ResultSet res5 = stmt5.executeQuery();
                    while(res5.next()){
                        /**récupérer les différents objets*/
                        Objet objet = new Objet(monde);
                        
                        objet.setType(res4.getString("portee"));
                        Point2D pos = new Point2D(res4.getInt("x"),res4.getInt("y"));
                        objet.setPosition(pos);
                        
                        /*rajout de l'objet*/
                        monde.getListElements().add(objet);
                        monde.getRoundElements().add(objet);
                        monde.getPositions().add(pos);
                    }
                     stmt5.close(); 
        
                    
                    
                    
                    
                    
                    
                       
                    // Link objects to the world
                    
                    /**solution : requête SQL concernant l'ajout de lien */
                    
                    // Associate player with the player's creature
                    Personnage perso = new Personnage();
                    monde.getPlayer().setPersonnage(perso);
                    /** nouveau attribut pour asavoir la creature jouer par le joueur*/
    
    
                    // Return created world
                    return monde;
                     
                     
                    
                     
                     }
        catch(ClassNotFoundException e) {
                System.err.println("ClassNotFoundException : " + e.getMessage());
            }
}
