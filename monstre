private int ptVie;
    private int degAtt;
    private int ptPar;
    private int pageAtt;
    private int pagePar;
    private Point2D pos;
    
    public Monstre(int pV, int dA, int pPar, int paAtt, int paPar, Point2D p){
        this.ptVie = pV;
        this.degAtt = dA;
        this.ptPar = pPar;
        this.pageAtt = paAtt;
        this.pagePar = paPar;
        this.pos = p;
    }
    
    public Monstre(Monstre m){ 
        this(m.ptVie,m.degAtt,m.ptPar,m.pageAtt,m.pagePar,m.pos);
    }
    
    public Monstre(){
        this(10,2,1,20,20,new Point2D(0,0));
    }
    
    public void setPtVie(int pv){
        this.ptVie = pv;
    }
    
    public int getPtVie(){
        return this.ptVie;
    }

    public void setDegAtt(int degAtt) {
        this.degAtt = degAtt;
    }

    public void setPtPar(int ptPar) {
        this.ptPar = ptPar;
    }

    public void setPageAtt(int pageAtt) {
        this.pageAtt = pageAtt;
    }

    public void setPagePar(int pagePar) {
        this.pagePar = pagePar;
    }

    public void setPos(Point2D pos) {
        this.pos = pos;
    }

    public int getDegAtt() {
        return this.degAtt;
    }

    public int getPtPar() {
        return this.ptPar;
    }

    public int getPageAtt() {
        return this.pageAtt;
    }

    public int getPagePar() {
        return this.pagePar;
    }

    public Point2D getPos() {
        return this.pos;
    }
    
    public void deplace(){
        Random generateurAleatoire = new Random();
        // On suppose que le monde est infini et que le monstre peut se déplacer de 10 max abs et 10 max ord
        int a = generateurAleatoire.nextInt(10);
        int b = generateurAleatoire.nextInt(10);
        pos.translate(a,b);
    }
    
    public void affiche(){
        // Quand on cherche à afficher un monstre, on veut voir son nombre de point de vie et sa position
        System.out.println("Point de vie : "+ ptVie);
        System.out.println("Position : "+ pos.toString());
    }
