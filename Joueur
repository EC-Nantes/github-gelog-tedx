/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package org.centrale.objet.WoE;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Scanner;

/**
 *
 * @author vdufo
 */
public class Joueur {
    private Personnage perso;
    private String nom;
    private ArrayList<Utilisable> effets;
    private ArrayList<Objet> inventaire;
    
    public Joueur(){
        Scanner scanner = new Scanner(System.in);
        System.out.println("Choisissez un personnage jouable : ");
        String p = scanner.nextLine();
        System.out.println("Quel nom voulez-vous lui donner ? ");
        String n = scanner.nextLine();
        System.out.println();
        boolean rep = true;
        while(rep){
            
        switch(p){
            case "Guerrier":
                this.nom = n;
                this.perso = new Guerrier(this.nom,80,80,30,10,12,100,15,new Point2D(0,0));
                rep = false;
                break;
            case "Archer":
                this.perso = new Archer();
                this.nom = n;
                rep=false;
                break;
            default:
                System.out.println("Personnage injouable");
                System.out.println("Choisissez un personnage jouable : ");
                p = scanner.nextLine();
                break;
            }
        } 
        this.effets = new ArrayList<>();
    }
    
    public Personnage getPerso(){
        return this.perso;
    }
    
    public String getNom(){
        return this.nom;
    }
    
    private boolean verif(Point2D A, ArrayList<Point2D> liste){
       boolean rep = false;
        for(Point2D element: liste){
            if (A.equals(element)){
                rep = true;
                break;
            }
        } 
        return rep;
    }
    
    
    public void deplacePerso(World monde){
        Scanner demandeDeplace = new Scanner(System.in);
        
        ArrayList<Point2D> positionPossible = monde.getPosition();
        Point2D positionActuel = this.perso.getPos();
        ArrayList<Point2D> positionAdj = positionActuel.caseAdj();
        ArrayList<Point2D> positionDep = new ArrayList<>();
        
        System.out.println("Position adj : "+positionAdj);
        System.out.println("Position des perso du monde : "+positionPossible);
        
        for (Point2D position : positionAdj){
            if(!verif(position,positionPossible)){
                positionDep.add(position);
            }
        }
        
        System.out.println("Voici les positions disponibles : "+positionDep);
        System.out.println("Sur quelle abcisse voulez-vous déplacer votre personnage (x) ?  ");
        String xDep = demandeDeplace.nextLine();
        System.out.println("Sur quelle abcisse voulez-vous déplacer votre personnage (y) ?  ");
        String yDep = demandeDeplace.nextLine();
        Point2D nouvellePosition= new Point2D(Integer.parseInt(xDep),Integer.parseInt(yDep));
        
        boolean rep = false;
        while(!rep){
            if(verif(nouvellePosition,positionDep)){
            rep = true;
            }
            else{
                System.out.println("La position que vous avez rentré n'est pas disponible, veuillez en rentrer une autre.");
                System.out.println("Voici les positions disponibles : "+positionDep);
                System.out.println("Sur quelle abcisse voulez-vous déplacer votre personnage (x) ?  ");
                xDep = demandeDeplace.nextLine();
                System.out.println("Sur quelle abcisse voulez-vous déplacer votre personnage (y) ?  ");
                yDep = demandeDeplace.nextLine();
                nouvellePosition= new Point2D(Integer.parseInt(xDep),Integer.parseInt(yDep));
            }
        }
        
        perso.setPos(nouvellePosition);
        
        if verif(perso.getPos(),monde.getListeObjets()){
            //// JE SUIS EN TRAIN DE MODIF MAIS J'AI DES PROBLEMES
        }
    }
    
    public void combattrePerso(World monde){
        
        ArrayList<Point2D> positionPossible = monde.getPosition();
        Point2D positionActuel = this.perso.getPos();
        ArrayList<Point2D> positionAdj = positionActuel.caseAdj();
        ArrayList<Creature> creaAComb = new ArrayList<>();
        ArrayList<Creature> creaMonde = monde.getLesCreatures();
        
        System.out.println("Position adj : "+positionAdj);
        System.out.println("Position des perso du monde : "+positionPossible);
        
        for (Creature c : creaMonde){
            if(verif(c.getPos(),positionAdj)){
                creaAComb.add(c);
            }
        }
        
        int vie = 0;
        
        if (creaAComb.isEmpty()){
            System.out.println("Aucun personnage à combattre");
        }
        else{
            for (Creature c :creaAComb){
                vie = c.getPtVie();
                if (this.perso instanceof Guerrier guerrier){
                    guerrier.combattre(c);
                }
                else{
                ((Archer)this.perso).combattre(c);
                }
                vie -= c.getPtVie();
                System.out.println("Votre personnage a combattu un "+c.typeCrea());
                System.out.println("Il a fait "+vie+" degats.");
            }
        }
        
    }
    
    public void voirInventaire(){
        int compteur = 1;
        
        if (inventaire.size() == 0){
            System.out.println("L'inventaire est vide, vous ne pouvez rien faire");
        }
        else{
            System.out.println("Voici les éléments de votre inventaire");
            for(Objet objet : this.inventaire){
                System.out.println(compteur+" : "+objet.nomClasse()+" de niveau "+objet.getNiveau());
            }
            Scanner demandeInv = new Scanner(System.in);
            System.out.println("Quel élément voulez vous utiliser ?");
            int obj = parseInt(demandeInv.nextLine())-1;
            effets.add(inventaire.get(obj));
            inventaire.remove(obj);
            
        }
         
    }
    
    public void ajouterInventaire(Objet o){
        this.inventaire.add(o);
    }
    
    public void tourDeJeuPerso(World monde){
        Scanner demande = new Scanner(System.in);
        System.out.println("Voulez-vous combattre (1), vous déplacer (2), voir votre inventaire (3) ou ne rien faire (4) ? ");
        String aFaire = demande.nextLine();
        boolean repTDJ = true;
        while(repTDJ){
            switch(aFaire){
                case "1":
                    repTDJ = false;
                    this.combattrePerso(monde);
                    break;
                case "2":
                    repTDJ = false;
                    System.out.println("Position actuelle : "+perso.getPos());
                    this.deplacePerso(monde);
                    System.out.println("Nouvelle position : "+perso.getPos());
                    break;
                case "3":
                    repTDJ = false;
                    this.voirInventaire();
                    break;
                case "4":
                    repTDJ = false;
                    System.out.println("Le personnage ne fait rien.");
                    break;
                default:
                    System.out.println("Demande erronée, veuillez à bien entrer ce que vous voulez faire.");
                    System.out.println("Voulez-vous 'Combattre', 'Deplacer' ou 'Ne rien faire' ? ");
                    aFaire = demande.nextLine();
                    break;
            }
        }
        
    }
}
